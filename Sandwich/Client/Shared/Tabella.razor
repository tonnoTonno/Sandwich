@page "/tabella"
@using System.Collections.Generic
@inject HttpClient Http

<style>
    .styled-table {
        width: 50%;
        border-collapse: collapse;
        margin: 50px auto;
    }

        .styled-table th,
        .styled-table td {
            padding: 10px;
        }

        .styled-table thead {
            background-color: #333;
            color: #fff;
        }

        .styled-table tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .styled-table .clickable {
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .styled-table .clickable:hover {
                background-color: #e2e2e2;
            }

        .styled-table .expanded-row {
            display: none;
        }

            .styled-table .expanded-row td {
                padding: 20px;
            }

            .styled-table .expanded-row  {
                margin-bottom: 10px;
            }

            .styled-table .expanded-row {
                color: #666;
            }


    .button {
        position: relative;
        overflow: hidden;
        height: 3rem;
        padding: 0 2rem;
        border-radius: 1.5rem;
        background: #3d3a4e;
        background-size: 400%;
        color: #fff;
        border: none;
    }

        .button:hover::before {
            transform: scaleX(1);
        }

    .button-content {
        position: relative;
        z-index: 1;
    }

    .button::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        transform: scaleX(0);
        transform-origin: 0 50%;
        width: 100%;
        height: inherit;
        border-radius: inherit;
        background: linear-gradient( 82.3deg, rgba(150, 93, 233, 1) 10.8%, rgba(99, 88, 238, 1) 94.3% );
        transition: all 0.475s;
    }
</style>

<h3>Tabella espandibile con Blazor</h3>

<table class="styled-table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Cognome</th>
            <th>Username</th>
            <th>Mail</th>
            <th>Password</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var utente in ListaUtenti)
        {
            <tr class="clickable" @onclick="@(() => ToggleExpansion(utente))">
                <td>@utente.Nome</td>
                <td>@utente.Cognome</td>
                <td>@utente.Username</td>
                <td>@utente.Mail</td>
                <td>@utente.Password</td>
            </tr>
            @if (utente.IsExpanded)
            {

                <tr class="clickable">
                    <td colspan="5">
                        <button class="button">
                            <span class="button-content">Apri </span>
                        </button>
                        <a>dnaoidnaiodaoidnaoidnaoidnaoidnaiodn</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {


    private void ToggleExpansion(Utente utente)
    {
        utente.IsExpanded = !utente.IsExpanded;
    }

    List<Utente> ListaUtenti { get; set; } = new List<Utente>();

    protected override async Task OnInitializedAsync()
    {
        string apiurl = "/api/Utente";
        ListaUtenti = await Http.GetFromJsonAsync<List<Utente>>(apiurl);
        ListaUtenti.ForEach(x => x.IsExpanded = false);
    }
}


